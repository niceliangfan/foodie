<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.imooc.mapper.OrderMapperCustom" >

  <resultMap id="myOrdersVO" type="com.imooc.pojo.vo.MyOrdersVO" >
    <id column="orderId" property="orderId" jdbcType="VARCHAR" />
    <result column="realPayAmount" property="realPayAmount" jdbcType="INTEGER" />
    <result column="postAmount" property="postAmount" jdbcType="INTEGER" />
    <result column="payMethod" property="payMethod" jdbcType="INTEGER" />
    <result column="isComment" property="isComment" jdbcType="INTEGER" />
    <result column="createdTime" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="orderStatus" property="orderStatus" jdbcType="INTEGER" />

    <collection property="subOrderItemList"
                select="queryMySubOrderItem"
                column="orderId"
                ofType="com.imooc.pojo.vo.MySubOrderItemVO" >
      <result column="itemId" property="itemId" jdbcType="VARCHAR" />
      <result column="itemName" property="itemName" jdbcType="VARCHAR" />
      <result column="itemImg" property="itemImg" jdbcType="VARCHAR" />
      <result column="itemSpecId" property="itemSpecId" jdbcType="VARCHAR" />
      <result column="itemSpecName" property="itemSpecName" jdbcType="VARCHAR" />
      <result column="price" property="price" jdbcType="INTEGER" />
      <result column="buyCounts" property="buyCounts" jdbcType="INTEGER" />
    </collection>
  </resultMap>

  <select id="queryMyOrders" resultMap="myOrdersVO" parameterType="Map">
    select
      o.id as orderId,
      o.real_pay_amount as realPayAmount,
      o.post_amount as postAmount,
      o.pay_method as payMethod,
      o.is_comment as isComment,
      o.created_time as createdTime,
      os.order_status as orderStatus
    from
      orders o
    left join
      order_status os
    on
      o.id = os.order_id
    where
      o.user_id = #{paramsMap.userId}
    and
      o.is_delete = 0
    <if test="paramsMap.orderStatus != null">
      and os.order_status = #{paramsMap.orderStatus}
    </if>
    order by
      o.updated_time asc
  </select>

  <select id="queryMySubOrderItem" parameterType="String" resultType="com.imooc.pojo.vo.MySubOrderItemVO">
    select
      oi.item_id as itemId,
      oi.item_name as itemName,
      oi.item_img as itemImg,
      oi.item_spec_id as itemSpecId,
      oi.item_spec_name as itemSpecName,
      oi.price as price,
      oi.buy_counts as buyCounts
    from
      order_items oi
    where
      oi.order_id = #{orderId}
  </select>

  <select id="queryMyOrdersNotUse" resultMap="myOrdersVO" parameterType="Map">
    select
      o.id as orderId,
      o.real_pay_amount as realPayAmount,
      o.post_amount as postAmount,
      o.pay_method as payMethod,
      o.created_time as createdTime,
      os.order_status as orderStatus,
      oi.item_id as itemId,
      oi.item_name as itemName,
      oi.item_img as itemImg,
      oi.item_spec_id as itemSpecId,
      oi.item_spec_name as itemSpecName,
      oi.price as price,
      oi.buy_counts as buyCounts
    from
      orders o
    left join
      order_status os
    on
      o.id = os.order_id
    left join
      order_items oi
    on
      o.id = oi.order_id
    where
      o.user_id = #{paramsMap.userId}
    and
      o.is_delete = 0
      <if test="paramsMap.orderStatus != null">
        and os.order_status = #{paramsMap.orderStatus}
      </if>
    order by
      o.updated_time asc
  </select>

  <select id="getOrderStatusCounts" parameterType="Map" resultType="Integer">
    select
      count(1)
    from
      orders o
    left join
      order_status os
    on
      o.id = os.order_id
    where
      o.user_id = #{paramsMap.userId}
    and
      os.order_status = #{paramsMap.orderStatus}
    <if test="paramsMap.isComment != null">
      and
        o.is_comment = #{paramsMap.isComment}
    </if>
  </select>

  <select id="getMyOrderTrend" parameterType="Map" resultType="com.imooc.pojo.OrderStatus">
    select
      os.order_id as orderId,
      os.order_status as orderStatus,
      os.created_time as createdTime,
      os.pay_time as payTime,
      os.deliver_time as deliverTime,
      os.success_time as successTime,
      os.comment_time as commentTime,
      os.close_time as closeTime
    from
      orders o
    left join
      order_status os
    on
      o.id = os.order_id
    where
      o.user_id = #{paramsMap.userId}
    and
      o.is_delete = 0
    and
      os.order_status in (20, 30, 40)
    order by
      os.order_id desc
  </select>

</mapper>